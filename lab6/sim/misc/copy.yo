                            | # Yang Zhenyu 519021910390
                            | # copy_block
                            | 
0x000:                      |     .pos 0
0x000:                      | init:
0x000: 30f40002000000000000 |     irmovq Stack, %rsp
0x00a: 30f50002000000000000 |     irmovq Stack, %rbp
0x014: 705000000000000000   |     jmp Main
                            | 
0x020:                      |     .align 8
                            | # Source block
0x020:                      | src:
0x020: 0a00000000000000     |     .quad 0x00a
0x028: b000000000000000     |     .quad 0x0b0
0x030: 000c000000000000     |     .quad 0xc00
                            | # Destination block
0x038:                      | dest:
0x038: 1101000000000000     |     .quad 0x111
0x040: 2202000000000000     |     .quad 0x222
0x048: 3303000000000000     |     .quad 0x333
                            | 
0x050:                      | Main:
0x050: 30f72000000000000000 |     irmovq src, %rdi
0x05a: 30f63800000000000000 |     irmovq dest, %rsi
0x064: 30f20300000000000000 |     irmovq $3, %rdx
0x06e: 807800000000000000   |     call copy_block
0x077: 00                   |     halt
                            | 
0x078:                      | copy_block:
0x078: a05f                 |     pushq %rbp
0x07a: 2073                 |     rrmovq %rdi, %rbx # rbx = src
0x07c: 2061                 |     rrmovq %rsi, %rcx # rcx = dest
0x07e: 2028                 |     rrmovq %rdx, %r8 # r8 = len
0x080: 30f50100000000000000 |     irmovq $1, %rbp # rbp = 1
0x08a: 30f00000000000000000 |     irmovq $0, %rax # result = 0
0x094: 6288                 |     andq %r8, %r8
0x096: 73d000000000000000   |     je End
                            |     
0x09f:                      | Loop:
0x09f: 50930000000000000000 |     mrmovq (%rbx), %r9 # r9 = val
0x0a9: 30fa0800000000000000 |     irmovq $8, %r10 # r10 = 8
0x0b3: 60a3                 |     addq %r10, %rbx # src++
0x0b5: 40910000000000000000 |     rmmovq %r9, (%rcx) # *dest = val
0x0bf: 60a1                 |     addq %r10, %rcx # dest++
0x0c1: 6390                 |     xorq %r9, %rax
0x0c3: 6158                 |     subq %rbp, %r8
0x0c5: 6288                 |     andq %r8, %r8
0x0c7: 749f00000000000000   |     jne Loop
                            | 
0x0d0:                      | End:
0x0d0: b05f                 |     popq %rbp
0x0d2: 90                   |     ret
                            | 
0x200:                      |     .pos 0x200
0x200:                      | Stack:
