# Yang Zhenyu 519021910390
# rsum_list

    .pos 0
init:
    irmovq Stack, %rsp
    irmovq Stack, %rbp
    jmp Main

    .align 8
ele1:
    .quad 0x00a
    .quad ele2
ele2:
    .quad 0x0b0
    .quad ele3
ele3:
    .quad 0xc00
    .quad 0

Main:
    irmovq ele1, %rdi
    pushq %rdi  # Push ele1
    call rsum_list   # sum_list(ele1)
    popq %rdi
    halt

    # init rsum_list
rsum_list:
    pushq %rbp
    rrmovq %rsp, %rbp
    mrmovq 16(%rbp), %rcx   # rcx = ls
    andq %rcx, %rcx # if !ls ret 0
    je End
    mrmovq (%rcx), %rdx # rdx = val = ls->val
    pushq %rdx # save rdx
    mrmovq 8(%rcx), %rdi
    pushq %rdi
    call rsum_list
    popq %rdi
    popq %rdx
    addq %rdx, %rax
    popq %rbp
    ret

End:
    popq %rbp
    irmovq $0, %rax
    ret   

    .pos 0x200
Stack:
